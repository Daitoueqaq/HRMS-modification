setwd("A:/files/Princton_Data/original")                          
library(readxl)

############input and process first experimental group##############
dataset_exp1 <- read_excel("e1.xlsx")
CID_exp1_1 <- read_excel("e1.xlsx")
CID_exp1_2 <- CID_exp1_1[-c(1,2,3,4,5,6,7),]
CID_exp1_3 <- setNames(CID_exp1_2, c("mass","intensity"))
CID_in_exp1 <- as.numeric (CID_exp1_3$intensity)
log1_exp1 <- c(CID_in_exp1,0)
log2_exp1 <- c(0,CID_in_exp1)
log3_exp1 <- c(CID_in_exp1[-1],0,0)
logic_1_exp1 <- ifelse (log1_exp1 > log2_exp1 & log3_exp1 < log1_exp1 , 1 , 0)
n_exp1 <- length (logic_1_exp1)
logic_2_exp1 <- logic_1_exp1[1:(n_exp1-1)]
CID_exp1_3$logic <- logic_2_exp1
max_cid_exp1 <- max(CID_in_exp1)
RI_1_exp1 <- CID_in_exp1 / max_cid_exp1
CID_exp1_3$RI_exp1 <- RI_1_exp1
CID_exp1_4 <- CID_exp1_3[CID_exp1_3$logic != 0 ,]

############input and process second experimental group##############
dataset_exp2 <- read_excel("e2.xlsx")
CID_exp2_1 <- read_excel("e2.xlsx")
CID_exp2_2 <- CID_exp2_1[-c(1,2,3,4,5,6,7),]
CID_exp2_3 <- setNames(CID_exp2_2, c("mass","intensity"))
CID_in_exp2 <- as.numeric (CID_exp2_3$intensity)
log1_exp2 <- c(CID_in_exp2,0)
log2_exp2 <- c(0,CID_in_exp2)
log3_exp2 <- c(CID_in_exp2[-1],0,0)
logic_1_exp2 <- ifelse (log1_exp2 > log2_exp2 & log3_exp2 < log1_exp2 , 1 , 0)
n_exp2 <- length (logic_1_exp2)
logic_2_exp2 <- logic_1_exp2[1:(n_exp2-1)]
CID_exp2_3$logic <- logic_2_exp2
max_cid_exp2 <- max(CID_in_exp2)
RI_1_exp2 <- CID_in_exp2 / max_cid_exp2
CID_exp2_3$RI_exp2 <- RI_1_exp2
CID_exp2_4 <- CID_exp2_3[CID_exp2_3$logic != 0 ,]

############input and process third experimental group##############
dataset_exp3 <- read_excel("e3.xlsx")
CID_exp3_1 <- read_excel("e3.xlsx")
CID_exp3_2 <- CID_exp3_1[-c(1,2,3,4,5,6,7),]
CID_exp3_3 <- setNames(CID_exp3_2, c("mass","intensity"))
CID_in_exp3 <- as.numeric (CID_exp3_3$intensity)
log1_exp3 <- c(CID_in_exp3,0)
log2_exp3 <- c(0,CID_in_exp3)
log3_exp3 <- c(CID_in_exp3[-1],0,0)
logic_1_exp3 <- ifelse (log1_exp3 > log2_exp3 & log3_exp3 < log1_exp3 , 1 , 0)
n_exp3 <- length (logic_1_exp3)
logic_2_exp3 <- logic_1_exp3[1:(n_exp3-1)]
CID_exp3_3$logic <- logic_2_exp3
max_cid_exp3 <- max(CID_in_exp3)
RI_1_exp3 <- CID_in_exp3 / max_cid_exp3
CID_exp3_3$RI_exp3 <- RI_1_exp3
CID_exp3_4 <- CID_exp3_3[CID_exp3_3$logic != 0 ,]

############input and process first control group##############
dataset_con1 <- read_excel("c1.xlsx")
CID_con1_1 <- read_excel("c1.xlsx")
CID_con1_2 <- CID_con1_1[-c(1,2,3,4,5,6,7),]
CID_con1_3 <- setNames(CID_con1_2, c("mass","intensity"))
CID_in_con1 <- as.numeric (CID_con1_3$intensity)
log1_con1 <- c(CID_in_con1,0)
log2_con1 <- c(0,CID_in_con1)
log3_con1 <- c(CID_in_con1[-1],0,0)
logic_1_con1 <- ifelse (log1_con1 > log2_con1 & log3_con1 < log1_con1 , 1 , 0)
n_con1 <- length (logic_1_con1)
logic_2_con1 <- logic_1_con1[1:(n_con1-1)]
CID_con1_3$logic <- logic_2_con1
max_cid_con1 <- max(CID_in_con1)
RI_1_con1 <- CID_in_con1 / max_cid_con1
CID_con1_3$RI_con1 <- RI_1_con1
CID_con1_4 <- CID_con1_3[CID_con1_3$logic != 0 ,]

############input and process second control group##############
dataset_con2 <- read_excel("c2.xlsx")
CID_con2_1 <- read_excel("c2.xlsx")
CID_con2_2 <- CID_con2_1[-c(1,2,3,4,5,6,7),]
CID_con2_3 <- setNames(CID_con2_2, c("mass","intensity"))
CID_in_con2 <- as.numeric (CID_con2_3$intensity)
log1_con2 <- c(CID_in_con2,0)
log2_con2 <- c(0,CID_in_con2)
log3_con2 <- c(CID_in_con2[-1],0,0)
logic_1_con2 <- ifelse (log1_con2 > log2_con2 & log3_con2 < log1_con2 , 1 , 0)
n_con2 <- length (logic_1_con2)
logic_2_con2 <- logic_1_con2[1:(n_con2-1)]
CID_con2_3$logic <- logic_2_con2
max_cid_con2 <- max(CID_in_con2)
RI_1_con2 <- CID_in_con2 / max_cid_con2
CID_con2_3$RI_con2 <- RI_1_con2
CID_con2_4 <- CID_con2_3[CID_con2_3$logic != 0 ,]

############input and process third control group##############
dataset_con3 <- read_excel("c3.xlsx")
CID_con3_1 <- read_excel("c3.xlsx")
CID_con3_2 <- CID_con3_1[-c(1,2,3,4,5,6,7),]
CID_con3_3 <- setNames(CID_con3_2, c("mass","intensity"))
CID_in_con3 <- as.numeric (CID_con3_3$intensity)
log1_con3 <- c(CID_in_con3,0)
log2_con3 <- c(0,CID_in_con3)
log3_con3 <- c(CID_in_con3[-1],0,0)
logic_1_con3 <- ifelse (log1_con3 > log2_con3 & log3_con3 < log1_con3 , 1 , 0)
n_con3 <- length (logic_1_con3)
logic_2_con3 <- logic_1_con3[1:(n_con3-1)]
CID_con3_3$logic <- logic_2_con3
max_cid_con3 <- max(CID_in_con3)
RI_1_con3 <- CID_in_con3 / max_cid_con3
CID_con3_3$RI_con3 <- RI_1_con3
CID_con3_4 <- CID_con3_3[CID_con3_3$logic != 0 ,]

############algorithm start##############
result_1 <- capture.output(
    for (i in 1:length(mass_1)){
        for (j in 1:length(Anion_1)){
            x <- 1000000*(mass_1[i]-Anion_1[j])/Anion_1[j]
            if (-5 < x & x < 5){
                print (mass_1[i],
                       digits=9)
            }
        }
    }
)
