##################################################FOUR_ELEMENTS###########################################################
library(progress)

C <- 12.00000
F <- 18.998403
H <- 1.007825
O <- 15.994915

# Define the range of integer values for each element
c_range <- 0:8
f_range <- 0:15
h_range <- 0:20
o_range <- 0:6

# Define the percent difference
percent_diff <- 0.000005

# Create a function to calculate the desired mass
desired_mass <- function(c, f, h, o) {
    mass <- c*C + f*F + h*H + o*O
    list(c = c, f = f, h = h, o = o, mass = mass)
}

desired_masses <- list()

# Loop through all combinations of c, f, h, o, n, s and calculate the corresponding desired mass
pb <- progress_bar$new(total = length(c_range) * length(f_range) * length(h_range) * length(o_range), format = "[:bar] :percent eta: :eta")
for (c in c_range) {
    for (f in f_range) {
        for (h in h_range) {
            for (o in o_range) {
                        desired_masses <- c(desired_masses, desired_mass(c, f, h, o))
                        pb$tick()
            }
        }
    }
}

desired_masses_df <- do.call(rbind, desired_masses)
num_rows <- length(desired_masses_df) %/% 5
num_cols <- 5
desired_masses_mat <- matrix(desired_masses_df, nrow=num_rows, ncol=num_cols, byrow=T)
desired_masses_df_1 <- as.data.frame(desired_masses_mat)
colnames(desired_masses_df_1) <- c("Carbon", "Fluorine", "Hydrogen", "Oxygen", "Exact_Mass")


result_from_new_peaks <- data.frame()

for (i in 1:nrow(desired_masses_df_1)) {
   
    exact_mass <- desired_masses_df_1$Exact_Mass[i]
    
    index <- which(abs((new_peaks_exp_RI_0.001$mass_index_exp - exact_mass)/((new_peaks_exp_RI_0.001$mass_index_exp + exact_mass)/2)) < 0.000005)
    
    if (length(index) > 0) {
        temp_df <- data.frame(mass_index_exp = new_peaks_exp_RI_0.001$mass_index_exp[index], 
                              Carbon = desired_masses_df_1$Carbon[i], 
                              Fluorine = desired_masses_df_1$Fluorine[i],
                              Hydrogen = desired_masses_df_1$Hydrogen[i],
                              Oxygen = desired_masses_df_1$Oxygen[i],
                              Exact_Mass = desired_masses_df_1$Exact_Mass[i])
        result_from_new_peaks <- rbind(result_from_new_peaks, temp_df)
    }
}



result_from_exist_peaks <- data.frame()

for (i in 1:nrow(desired_masses_df_1)) {
   
    exact_mass <- desired_masses_df_1$Exact_Mass[i]
    
    index_1 <- which(abs((exist_peaks_RI_10_0.001$mass_index_exp - exact_mass)/((exist_peaks_RI_10_0.001$mass_index_exp + exact_mass)/2)) < 0.000005)
    
    if (length(index_1) > 0) {
        temp_df_1 <- data.frame(mass_index_exp = exist_peaks_RI_10_0.001$mass_index_exp[index_1], 
                              Carbon = desired_masses_df_1$Carbon[i], 
                              Fluorine = desired_masses_df_1$Fluorine[i],
                              Hydrogen = desired_masses_df_1$Hydrogen[i],
                              Oxygen = desired_masses_df_1$Oxygen[i],
                              Exact_Mass = desired_masses_df_1$Exact_Mass[i])
        result_from_exist_peaks <- rbind(result_from_exist_peaks, temp_df_1)
    }
}

library("writexl")
write_xlsx(result_from_exist_peaks,"A:/files/Princton_Data/test_data_61_7/result_from_exist_peaks.xlsx")
write_xlsx(result_from_new_peaks,"A:/files/Princton_Data/test_data_61_7/result_from_new_peaks.xlsx")


#############################################SIX_ELEMENTS#################################################
library(progress)

C <- 12.00000
F <- 18.998403
H <- 1.007825
O <- 15.994915
N <- 14.003074
S <- 31.972072

# Define the range of integer values for each element
c_range <- 0:8
f_range <- 0:15
h_range <- 0:15
o_range <- 0:6
n_range <- 0:3
s_range <- 0:3

# Define the percent difference
percent_diff <- 0.000005

# Create a function to calculate the desired mass
desired_mass <- function(c, f, h, o, n, s) {
    mass <- c*C + f*F + h*H + o*O + n*N + s*S
    list(c = c, f = f, h = h, o = o, n = n, s = s, mass = mass)
}

desired_masses <- list()

# Loop through all combinations of c, f, h, o, n, s and calculate the corresponding desired mass
pb <- progress_bar$new(total = length(c_range) * length(f_range) * length(h_range) * length(o_range) * length(n_range) * length(s_range), 
                       format = "[:bar] :percent eta: :eta")
                       
for (c in c_range) {
    for (f in f_range) {
        for (h in h_range) {
            for (o in o_range) {
                for (n in n_range) {
                    for (s in s_range) {
                desired_masses <- c(desired_masses, desired_mass(c, f, h, o, n, s))
                pb$tick()
                    }
                }
            }
        }
    }
}

desired_masses_df <- do.call(rbind, desired_masses)
num_rows <- length(desired_masses_df) %/% 7
num_cols <- 7
desired_masses_mat <- matrix(desired_masses_df, nrow=num_rows, ncol=num_cols, byrow=T)
desired_masses_df_1 <- as.data.frame(desired_masses_mat)
colnames(desired_masses_df_1) <- c("Carbon", "Fluorine", "Hydrogen", "Oxygen", "Nitrogen", "Sulfur", "Exact_Mass")


result_from_new_peaks <- data.frame()

for (i in 1:nrow(desired_masses_df_1)) {
   
    exact_mass <- desired_masses_df_1$Exact_Mass[i]
    
    index <- which(abs((new_peaks_exp_RI_0.001$mass_index_exp - exact_mass)/((new_peaks_exp_RI_0.001$mass_index_exp + exact_mass)/2)) < 0.000005)
    
    if (length(index) > 0) {
        temp_df <- data.frame(mass_index_exp = new_peaks_exp_RI_0.001$mass_index_exp[index], 
                              Carbon = desired_masses_df_1$Carbon[i], 
                              Fluorine = desired_masses_df_1$Fluorine[i],
                              Hydrogen = desired_masses_df_1$Hydrogen[i],
                              Oxygen = desired_masses_df_1$Oxygen[i],
                              Nitrogen = desired_masses_df_1$Nitrogen[i],
                              Sulfur = desired_masses_df_1$Sulfur[i],
                              Exact_Mass = desired_masses_df_1$Exact_Mass[i])
        result_from_new_peaks <- rbind(result_from_new_peaks, temp_df)
    }
}



result_from_exist_peaks <- data.frame()

for (i in 1:nrow(desired_masses_df_1)) {
   
    exact_mass <- desired_masses_df_1$Exact_Mass[i]
    
    index_1 <- which(abs((exist_peaks_RI_10_0.001$mass_index_exp - exact_mass)/((exist_peaks_RI_10_0.001$mass_index_exp + exact_mass)/2)) < 0.000005)
    
    if (length(index_1) > 0) {
        temp_df_1 <- data.frame(mass_index_exp = exist_peaks_RI_10_0.001$mass_index_exp[index_1], 
                              Carbon = desired_masses_df_1$Carbon[i], 
                              Fluorine = desired_masses_df_1$Fluorine[i],
                              Hydrogen = desired_masses_df_1$Hydrogen[i],
                              Oxygen = desired_masses_df_1$Oxygen[i],
                              Nitrogen = desired_masses_df_1$Nitrogen[i],
                              Sulfur = desired_masses_df_1$Sulfur[i],
                              Exact_Mass = desired_masses_df_1$Exact_Mass[i])
        result_from_exist_peaks <- rbind(result_from_exist_peaks, temp_df_1)
    }
}

library("writexl")
write_xlsx(result_from_exist_peaks,"A:/files/Princton_Data/test_data_61_7/result_from_exist_peaks.xlsx")
write_xlsx(result_from_new_peaks,"A:/files/Princton_Data/test_data_61_7/result_from_new_peaks.xlsx")
